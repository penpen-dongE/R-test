mutate(Title = ifelse (
title %in% c("Mlle", "Ms", "Lady", "Dona"), "Miss", title),
Title = ifelse(title == "Mme", "Mrs", title),
Title = ifelse(title %in% c("Capt", "Col",
"Major", "Dr", "Rev", "Don",
"Sir", "the Countess",
"Jonkheer"),
"officer", title))
table(df_train$Title)
title_age_mean <-
df_train %>%
select(Title, Age) %>%
group_by(Title) %>%
summarise(Title_mean=mean(Age, na.rm = TRUE))
View(title_age_mean)
title_age_mean_df = as.data.frame(title_age_mean)
View(title_age_mean_df)
age_nan_index=which(is.na(df_train$Age))
age_nan_index
df_train[6, ]
df_train[6,6]
df_train[6,6] <- 0
for (index in c(age_nan_index)){
title = df_train[index, 14]
title_age_mean <-
title_age_mean_df %>%  dplyr::filter(Title==title) %>%
select(Title_mean)
print(paste0("index:",index,":title:",title,
":title_age_mean :", title_age_mean))
df_train[index,6] <- title_age_mean
}
View(df_train)
df_train$Embarked <-
if_else(is.na(df_train$Embarked), "S", df_train$Embarked)
df_train$Embarked <- replace(df_train$Embarked, which(
is.na(df_train$Embarked)),'S')
df_train$Age %/% 10
df_train <-
df_train %>%
mutate(Age_cat = Age %/% 10)
View(df_train)
df_train <- subset(df_train,
select = -c(PassengerId, Cabin, Name, Age, Ticket))
df_train <- na.omit(df_train)
df_train$Survived <- as.integer(df_train$Survived)
str(df_train)
library(caTools)
sample = sample.split(df_train, SplitRatio = 0.8)
trainset = subset(df_train, sample==TRUE)
testset=subset(df_train, sample==FALSE)
View(trainset)
View(testset)
library(xgboost)
library(dplyr)
library(DiagrammeR)
library(caret)
clf <- xgboost(data= data.matrix(trainset %>%
dplyr::select(-Survived)),
label = trainset$Survived,
eta = 0.1,
depth = 3,
nrounds = 100,
objective = "binary:logistic",
eval_metric = "logloss")
pred = predict(clf , data.matrix(testset %>% dplyr::select(-Survived)))
pred <- ifelse(pred<=0.5, 0, 1)
table(pred)
library(caret)
confusionMatrix(factor(pred), factor(testset$diagnosis))
library("e1071")
clf <- xgboost(data= data.matrix(trainset %>%
dplyr::select(-Survived)),
label = trainset$Survived,
eta = 0.1,
depth = 3,
nrounds = 100,
objective = "binary:logistic",
eval_metric = "logloss")
pred = predict(clf , data.matrix(testset %>% dplyr::select(-Survived)))
pred <- ifelse(pred<=0.5, 0, 1)
table(pred)
confusionMatrix(factor(pred), factor(testset$diagnosis))
setwd("C:/education/R/workspace")
df_train <- read.csv("./data/titanic/train.csv", na.string="")
View(df_train)
str(df_train)
colSums(is.na(df_train))
nrow(df_train)
df_nan=colSums(is.na(df_train))/nrow(df_train)
df_nan
table(df_train["Survived"])
table(df_train["Pclass"])
library(dplyr)
df_train %>%
select(Pclass,Survived) %>%
group_by(Pclass) %>%
table
library(ggplot2)
ggplot(df_train, aes(x=Pclass, fill=factor(Survived))) +
geom_bar(width=0.5) +
xlab("Pclass") +
ylab("Total Count") +
labs(fill = "Survived")
df_train %>%
select(Sex, Survived) %>%
group_by(Sex) %>%
table
ggplot(df_train, aes(x=Sex, fill=factor(Survived))) +
geom_bar(width = 0.5) +
xlab("Sex") +
ylab("Total Count") +
labs(fill = "Survived")
df_train %>%
na.omit() %>%
select(Survived, Pclass, Age, SibSp, Parch, Fare) %>%
cor
library(fBasics)
df_train %>%
select(Survived, Pclass, Age, SibSp, Parch, Fare) %>%
skewness
hist(df_train$Fare)
df_train$Fare=log1p(df_train$Fare)
hist(df_train$Fare)
df_train <-
df_train %>%
mutate(Family_size = SibSp+Parch+1)
View(df_train)
df_train %>%
select(Family_size, Survived) %>%
group_by(Family_size) %>%
table
ggplot(df_train, aes(x=Family_size, fill = factor(Survived))) +
geom_bar(width = 0.5) +
xlab("Family_size") +
ylab("Total Count") +
labs(fill = "Survived")
title <- gsub("^.*, (.*?)\\..*$","\\1",df_train$Name)
View(title)
table(title)
df_train <-
df_train %>%
mutate(Title = ifelse (
title %in% c("Mlle", "Ms", "Lady", "Dona"), "Miss", title),
Title = ifelse(title == "Mme", "Mrs", title),
Title = ifelse(title %in% c("Capt", "Col",
"Major", "Dr", "Rev", "Don",
"Sir", "the Countess",
"Jonkheer"),
"officer", title))
table(df_train$Title)
title_age_mean <-
df_train %>%
select(Title, Age) %>%
group_by(Title) %>%
summarise(Title_mean=mean(Age, na.rm = TRUE))
View(title_age_mean)
title_age_mean_df = as.data.frame(title_age_mean)
View(title_age_mean_df)
age_nan_index=which(is.na(df_train$Age))
age_nan_index
df_train[6, ]
df_train[6,6]
df_train[6,6] <- 0
for (index in c(age_nan_index)){
title = df_train[index, 14]
title_age_mean <-
title_age_mean_df %>%  dplyr::filter(Title==title) %>%
select(Title_mean)
print(paste0("index:",index,":title:",title,
":title_age_mean :", title_age_mean))
df_train[index,6] <- title_age_mean
}
View(df_train)
df_train$Embarked <-
if_else(is.na(df_train$Embarked), "S", df_train$Embarked)
df_train$Embarked <- replace(df_train$Embarked, which(
is.na(df_train$Embarked)),'S')
df_train$Age %/% 10
df_train <-
df_train %>%
mutate(Age_cat = Age %/% 10)
View(df_train)
df_train <- subset(df_train,
select = -c(PassengerId, Cabin, Name, Age, Ticket))
df_train <- na.omit(df_train)
df_train$Survived <- as.integer(df_train$Survived)
str(df_train)
library(caTools)
library("e1071")
sample = sample.split(df_train, SplitRatio = 0.8)
trainset = subset(df_train, sample==TRUE)
testset=subset(df_train, sample==FALSE)
View(trainset)
View(testset)
install.packages("xgboost")
install.packages("DiagrammeR")
library(xgboost)
library(dplyr)
library(DiagrammeR)
clf <- xgboost(data= data.matrix(trainset %>%
dplyr::select(-Survived)),
label = trainset$Survived,
eta = 0.1,
depth = 3,
nrounds = 100,
objective = "binary:logistic",
eval_metric = "logloss")
pred = predict(clf , data.matrix(testset %>% dplyr::select(-Survived)))
View(pred)
pred <- ifelse(pred<=0.5, 0, 1)
install.packages("xgboost")
install.packages("DiagrammeR")
library(caret)
table(pred)
confusionMatrix(factor(pred), factor(testset$diagnosis))
confusionMatrix(factor(pred), factor(testset$Survived))
importance_matrix <- xgb.importance(colnames(trainset)[-1],
model = clf)
importance_matrix
xgb.plot.importance(importance_matrix)
xgb.plot.importance(importance_matrix)
setwd("C:/education/R/workspace")
stringsAsFactors=FALSE)
customer <- read.csv("./data/loarn/customer.csv",
sep="|",header = TRUE,
stringsAsFactors=FALSE)
View(customer)
library(lubridate)
end <- parse_date_time(2015, "%Y")
end
start <- parse_date_time(customer$AGE, "%Y")
start
diff_in_yr=(end-start)/365
diff_in_yr
customer$AGE <- floor(diff_in_yr)
View(customer)
findInterval(25, c(10,29,39,49,59,90))
findInterval(45,c(10,29,39,49,59,90))
customer$AGE <- findInterval(customer$AGE,c(10,29,39,49,59,90))
View(customer)
customer$AGE <- factor(customer$AGE, labels=c("20s&below",
"30s","40s","50s",
"60s&up"))
View(customer)
loarn <- read.csv("./data/loarn/loarn.csv",
sep="|",header = TRUE, stringsAsFactors = FALSE)
View(loarn)
start <- parse_date_time("199312","%Y%m")
start_ln <- parse_date_time(loarn$LN_FROM,"%Y%m")
start_ln
end_ln <- parse_date_time(loarn$YM,"%Y%m")
end_ln
diff_in_month=as.double(difftime(end_ln,start_ln,
units="days")*12/365)
loarn$DUR_LN <- floor(diff_in_month)
View(loarn)
library(dplyt)
library(dplyr)
loarn_1512 <- loarn %>% filter(YM==201512)
View(loarn_1512)
loarn_1512 <- loarn %>% filter(loarn$YM==201512)
View(loarn_1512)
customer <- read.csv("./data/loarn/customer.csv",
sep="|",header = TRUE,
stringsAsFactors=FALSE)
end <- parse_date_time(2015, "%Y")
end
start <- parse_date_time(customer$AGE, "%Y")
start
diff_in_yr=(end-start)/365
diff_in_yr
customer$AGE <- floor(diff_in_yr)
findInterval(25, c(10,29,39,49,59,90))
findInterval(45,c(10,29,39,49,59,90))
customer$AGE <- findInterval(customer$AGE,c(10,29,39,49,59,90))
customer$AGE <- factor(customer$AGE, labels=c("20s&below",
"30s","40s","50s",
"60s&up"))
loarn <- read.csv("./data/loarn/loarn.csv",
sep="|",header = TRUE, stringsAsFactors = FALSE)
start <- parse_date_time("199312","%Y%m")
start_ln <- parse_date_time(loarn$LN_FROM,"%Y%m")
start_ln
end_ln <- parse_date_time(loarn$YM,"%Y%m")
end_ln
diff_in_month=as.double(difftime(end_ln,start_ln,
units="days")*12/365)
loarn$DUR_LN <- floor(diff_in_month)
loarn_1512 <- loarn %>% filter(loarn$YM==201512)
View(loarn_1512)
loarn <- read.csv("./data/loarn/loarn.csv",
sep="|",header = TRUE, stringsAsFactors = FALSE)
View(loarn)
start <- parse_date_time("199312","%Y%m")
start_ln <- parse_date_time(loarn$LN_FROM,"%Y%m")
start_ln
end_ln <- parse_date_time(loarn$YM,"%Y%m")
end_ln
diff_in_month=as.double(difftime(end_ln,start_ln,
units="days")*12/365)
loarn$DUR_LN <- floor(diff_in_month)
View(loarn)
loarn_1512 <- loarn %>% filter(YM==201512)
View(loarn)
library(caret)
loarn_1512 <- loarn %>% filter(YM==201512)
View(loarn_1512)
library(ceret)
library(dplyr)
loarn_1512 <- loarn %>% filter(YM==201512)
View(loarn_1512)
loarn_1512 <- loarn %>% filter(loarn$YM==201512)
View(loarn_1512)
loarn_1512 <- loarn %>% filter(loarn,YM==201512)
library(stats)
loarn_1512 <- loarn %>% filter(YM==201512)
str(loarn)
library(dplyr)
loarn_1512 <- loarn %>% filter(YM==201512)
loarn_1512 <- filter(loarn , YM==201512)
View(loarn_1512)
library(dplyr)
library("e1071")
loarn_1512 <-loarn %>% filter(YM==201512)
library(DiagrammeR)
library(xgboost)
library(caret)
library(caTools)
loarn_1512 <-loarn %>% filter(YM==201512)
str(loarn)
summary(loarn)
View(loarn)
is.na(loarn)
loarn_1512 <-loarn %>% filter(YM==201512)
ls()
rm(ls())
rm(list=ls())
setwd("C:/education/R/workspace")
customer <- read.csv("./data/loarn/customer.csv",
sep="|",header = TRUE,
stringsAsFactors=FALSE)
library(lubridate)
end <- parse_date_time(2015, "%Y")
end
start <- parse_date_time(customer$AGE, "%Y")
start
diff_in_yr=(end-start)/365
diff_in_yr
customer$AGE <- floor(diff_in_yr)
findInterval(25, c(10,29,39,49,59,90))
findInterval(45,c(10,29,39,49,59,90))
customer$AGE <- findInterval(customer$AGE,c(10,29,39,49,59,90))
customer$AGE <- factor(customer$AGE, labels=c("20s&below",
"30s","40s","50s",
"60s&up"))
loarn <- read.csv("./data/loarn/loarn.csv",
sep="|",header = TRUE, stringsAsFactors = FALSE)
start <- parse_date_time("199312","%Y%m")
start_ln <- parse_date_time(loarn$LN_FROM,"%Y%m")
start_ln
end_ln <- parse_date_time(loarn$YM,"%Y%m")
end_ln
diff_in_month=as.double(difftime(end_ln,start_ln,
units="days")*12/365)
loarn$DUR_LN <- floor(diff_in_month)
library(dplyr)
loarn_1512 <-loarn %>% filter(YM==201512)
loarn_1512 <- loarn %>% filter(YM==201512)
library(dplyr)
library(caret)
loarn_1512 <- loarn %>% filter(YM==201512)
library(caTools)
library(DiagrammeR)
library(xgboost)
loarn_1512 <- loarn %>% filter(YM==201512)
loarn_1512 <- loarn %>% filter(YM == '201512')
loarn_1512 <- loarn %>% filter(loarn$YM == 201512)
View(loarn_1512)
loarn$YM
Tail(loarn$YM)
loarn_15120 <- loarn %>% filter(loarn$YM == 201512)
View(loarn_15120)
str(loarn_1512)
end_ln <- parse_date_time(loarn$YM,"%Y%m")
end_ln
View(loarn)
str(loarn)
loarn_1512 <- loarn %>% filter(.data[[var[1]]] == 201512)
View(loarn_1512)
YM
loarn$YM
str(loarn$YM)
ls()
loarn_1512 <- loarn %>% filter(YM == 201512)
loarn_1512 <- loarn %>% filter(loarn,YM == 201512)
loarn_1512 <- loarn %>% stat::filter(loarn,YM == 201512)
library(stat)
library(stats)
loarn_1512 <- loarn %>% stat::filter(loarn,YM == 201512)
loarn_1512 <- loarn %>% dplyr::filter(loarn,YM == 201512)
loarn_1512 <- loarn %>% dplyr::filter(YM == 201512)
View(loarn_1512)
overdue <- read.csv("./data/loarn/overdue.csv",
sep="|", header = TRUE)
View(overdue)
start_dlq <- parse_date_time(overdue$DLQ_FROM,"%Y%m")
end_dlq <- parse_date_time(as.character(overdue$YM),"%Y%m")
diff_in_month=as.double(difftime(end_dlq,start_dlq,units = "days")*12/365)
overdue$DUR_DLQ <- floor(diff_in_month)
View(overdue)
overdue_1512 <- overdue %>% dplyr::filter(YM==201512)
View(overdue_1512)
left_join(loarn_1512,customer,by=c("CustomerId"))
df<-left_join(loarn_1512,customer,by=c("CustomerId"))
View(df)
JOIN_KEY <- df %>%  group_by(CustomerId) %>%
summarise(NUM_LN=n())
x <- right_join(customer,JOIN_KEY,by="CustomerId")
View(x)
LN_AMT <- df %>%
group_by(CustomerId) %>%
summarise(AMT_LN=sum(LN_AMT))
x <- right_join(x, LN_AMT, by="CustomerId")
View(x)
NUM_NBLN <-
df %>% dplyr::filter(SCTR_CD!=1) %>%
group_by(CustomerId) %>%
dplyr::summarise(NUM_NBLN=n())
x<-right_join(x, NUM_NBLN, by="CustomerId")
View(x)
NBLN_AMT <- df %>%
dplyr::filter(SCTR_CD != 1) %>%
group_by(customerId) %>%
dplyr::summarise(NBLN_AMT=sum(LN_AMT))
NBLN_AMT <- df %>%
dplyr::filter(SCTR_CD != 1) %>%
group_by(CustomerId) %>%
dplyr::summarise(NBLN_AMT=sum(LN_AMT))
x<-right_join(x,NBLN_AMT,by="CustomerId")
View(x)
library(plyr)
df1 <- join(loarn_1512, overdue_1512,by=c("CustomerId", "COM_KEY"))
View(df1)
df1$DLQ_1512 <- ifelse(is.na(df1$DLQ_CD_1),0,1)
View(df1)
NUM_DLQ_1512 <- overdue_1512 %>%
group_by(CustomerId) %>%
dplyr::summarise(NUM_DLQ_1512=n())
y <- left_join(x, NUM_DLQ_1512, by="CustomerId")
y$NUM_DLQ_1512[is.na(y$NUM_DLQ_1512)]<-0
View(y)
overdue_2016 <-
overdue %>% dplyr::filter(YM>201512& YM<=201612)
NUM_DLQ_2016 <- overdue_2016 %>%
group_by(CustomerId) %>%
dplyr::summarise(NUM_DLQ_2016=n())
y <- left_join(y, NUM_DLQ_2016, by="CustomerId")
y <- left_join(y, NUM_DLQ_2016, by="CustomerId")
View(y)
y <- left_join(y, NUM_DLQ_2016, by="CustomerId")
View(y)
y$NUM_DLQ_2016[is.na(y$NUM_DLQ_2016)]<-0
DLQ_AMT_1512 <- overdue_1512 %>%
group_by(CustomerId) %>%
dplyr::summarise(DLQ_AMT_1512=sum(DLQ_AMT))
y <- join(y, DLQ_AMT_1512, by="CustomerId")
y$DLQ_AMT_1512[is.na(y$DLQ_AMT_1512)]<-0
View(y)
rm(y$NUM_DLQ_2016.x,y$NUM_DLQ_2016.y)
y$DLQ_AMT_1512 <- ifelse(y$NUM_DLQ_1512>0,1,0)
library(data.table)
NUM_COM <- data.frame(setDT(df)[, .(NUM_COM=uniqueN(COM_KEY)),
.(customerId)])
View(NUM_COM)
NUM_COM <- data.frame(setDT(df)[, .(NUM_COM=uniqueN(COM_KEY)),
.(CustomerId)])
View(NUM_COM)
z <- left_join(y, NUM_COM, by="CustomerId")
View(z)
z$NUM_DLQ_2016 <- ifelse(z$NUM_DLQ_2016>0,1,0)
input <- z
str(input)
input$NUM_DLQ_2016 <- factor(input$NUM_DLQ_2016)
input$NUM_DLQ_1512 <- factor(input$DLQ_1512)
input$NUM_DLQ_1512 <- factor(input$NUM_DLQ_1512)
input$GENDER <- factor(input$GENDER)
str(input)
input <- input %>%
select(-CustomerId)
View(input)
poker_vector1 <- c(140, -50, 20, -120, 240)
names(poker_vector1) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
poker_vector2 <- c(Monday = 140, -50, 20, -120, 240)
roulette_vector1 <- c(-24, -50, 100, -350, 10)
poker_vector1
roulette_vector1
poker_vector2
days_vector <- names(poker_vector1)
days_vector
poker_vector1
names(roulette_vector1) <- days_vector
roulette_vector2 <- c(-24, -50, 100, -350, 10)
roulette_vector2
names(roulette_vector2) <- "Monday"
roulette_vector2
poker_vector1
poker_vector2
roulette_vector1
roulette_vector2
library(ggplot2)
mpg <- as.data.frame(ggplot2::mpg)
mpg
